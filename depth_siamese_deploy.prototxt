name: "depth_siamese_deploy"


######################################
#### LOAD DATA: 3 training images ####
######################################
layer {
  name: "L_data"
  type: "Input"
  top: "L_data"
  input_param {
    shape: {
      dim: 1
      dim: 1
      dim: 64
      dim: 128
    }
  }
}
layer {
  name: "R_data"
  type: "Input"
  top: "R_data"
  input_param {
    shape: {
      dim: 1
      dim: 1
      dim: 64
      dim: 128
    }
  }
}


######################################
#### STEP 1: initial conv         ####
####    out: 32 x 64 x 8          ####
######################################

#### Left Leg  #######################
layer {
  name: "conv1_L"
  type: "Convolution"
  bottom: "L_data"
  top: "conv1_L"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    kernel_size: 11
    pad: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_L"
  type: "ReLU"
  bottom: "conv1_L"
  top: "conv1_L"
}
layer {
  name: "norm1_L"
  type: "LRN"
  bottom: "conv1_L"
  top: "conv1_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv1b_L"
  type: "Convolution"
  bottom: "conv1_L"
  top: "conv1b_L"
  param {
    name: "conv1b_w"
    lr_mult: 1
  }
  param {
    name: "conv1b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    kernel_size: 7
    pad: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1b_L"
  type: "ReLU"
  bottom: "conv1b_L"
  top: "conv1b_L"
}
layer {
  name: "norm1b_L"
  type: "LRN"
  bottom: "conv1b_L"
  top: "conv1b_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool1_L"
  type: "Pooling"
  bottom: "conv1b_L"
  top: "pool1_L"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

#### Right Leg #######################
layer {
  name: "conv1_R"
  type: "Convolution"
  bottom: "R_data"
  top: "conv1_R"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    kernel_size: 11
    pad: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_R"
  type: "ReLU"
  bottom: "conv1_R"
  top: "conv1_R"
}
layer {
  name: "norm1_R"
  type: "LRN"
  bottom: "conv1_R"
  top: "conv1_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv1b_R"
  type: "Convolution"
  bottom: "conv1_R"
  top: "conv1b_R"
  param {
    name: "conv1b_w"
    lr_mult: 1
  }
  param {
    name: "conv1b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    kernel_size: 7
    pad: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1b_R"
  type: "ReLU"
  bottom: "conv1b_R"
  top: "conv1b_R"
}
layer {
  name: "norm1b_R"
  type: "LRN"
  bottom: "conv1b_R"
  top: "conv1b_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool1_R"
  type: "Pooling"
  bottom: "conv1b_R"
  top: "pool1_R"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


######################################
#### STEP 2: conv set 2           ####
####    out: 16 x 32 x 64         ####
######################################

#### Left Leg  #######################
layer {
  name: "conv2_L"
  type: "Convolution"
  bottom: "pool1_L"
  top: "conv2_L"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_L"
  type: "ReLU"
  bottom: "conv2_L"
  top: "conv2_L"
}
layer {
  name: "norm2_L"
  type: "LRN"
  bottom: "conv2_L"
  top: "conv2_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2b_L"
  type: "Convolution"
  bottom: "conv2_L"
  top: "conv2b_L"
  param {
    name: "conv2b_w"
    lr_mult: 1
  }
  param {
    name: "conv2b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2b_L"
  type: "ReLU"
  bottom: "conv2b_L"
  top: "conv2b_L"
}
layer {
  name: "norm2b_L"
  type: "LRN"
  bottom: "conv2b_L"
  top: "conv2b_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool2_L"
  type: "Pooling"
  bottom: "conv2b_L"
  top: "pool2_L"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

#### Right Leg #######################
layer {
  name: "conv2_R"
  type: "Convolution"
  bottom: "pool1_R"
  top: "conv2_R"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_R"
  type: "ReLU"
  bottom: "conv2_R"
  top: "conv2_R"
}
layer {
  name: "norm2_R"
  type: "LRN"
  bottom: "conv2_R"
  top: "conv2_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2b_R"
  type: "Convolution"
  bottom: "conv2_R"
  top: "conv2b_R"
  param {
    name: "conv2b_w"
    lr_mult: 1
  }
  param {
    name: "conv2b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2b_R"
  type: "ReLU"
  bottom: "conv2b_R"
  top: "conv2b_R"
}
layer {
  name: "norm2b_R"
  type: "LRN"
  bottom: "conv2b_R"
  top: "conv2b_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool2_R"
  type: "Pooling"
  bottom: "conv2b_R"
  top: "pool2_R"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


######################################
#### STEP 3: conv set 3           ####
####    out: 8 x 16 x 64          ####
######################################

#### Left Leg  #######################
layer {
  name: "conv3_L"
  type: "Convolution"
  bottom: "pool2_L"
  top: "conv3_L"
  param {
    name: "conv3_w"
    lr_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_L"
  type: "ReLU"
  bottom: "conv3_L"
  top: "conv3_L"
}
layer {
  name: "norm3_L"
  type: "LRN"
  bottom: "conv3_L"
  top: "conv3_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3b_L"
  type: "Convolution"
  bottom: "conv3_L"
  top: "conv3b_L"
  param {
    name: "conv3b_w"
    lr_mult: 1
  }
  param {
    name: "conv3b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3b_L"
  type: "ReLU"
  bottom: "conv3b_L"
  top: "conv3b_L"
}
layer {
  name: "norm3b_L"
  type: "LRN"
  bottom: "conv3b_L"
  top: "conv3b_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool3_L"
  type: "Pooling"
  bottom: "conv3b_L"
  top: "pool3_L"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

#### Right Leg #######################
layer {
  name: "conv3_R"
  type: "Convolution"
  bottom: "pool2_R"
  top: "conv3_R"
  param {
    name: "conv3_w"
    lr_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_R"
  type: "ReLU"
  bottom: "conv3_R"
  top: "conv3_R"
}
layer {
  name: "norm3_R"
  type: "LRN"
  bottom: "conv3_R"
  top: "conv3_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3b_R"
  type: "Convolution"
  bottom: "conv3_R"
  top: "conv3b_R"
  param {
    name: "conv3b_w"
    lr_mult: 1
  }
  param {
    name: "conv3b_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3b_R"
  type: "ReLU"
  bottom: "conv3b_R"
  top: "conv3b_R"
}
layer {
  name: "norm3b_R"
  type: "LRN"
  bottom: "conv3b_R"
  top: "conv3b_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "pool3_R"
  type: "Pooling"
  bottom: "conv3b_R"
  top: "pool3_R"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


######################################
#### STEP 4: full-conn w/ conv    ####
####    out: 16 x 32 x 32         ####
######################################

#### Left Leg  #######################
layer {
  name: "fc4_L"
  type: "InnerProduct"
  bottom: "pool3_L"
  top: "fc4_L"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "make2d4_L"
  type: "Reshape"
  bottom: "fc4_L"
  top: "reshape4_L"
  reshape_param {
    shape {
      dim: 0
      dim: 8
      dim: 16
      dim: 32
    }
  }
}
layer {
  name: "drop4_L"
  type: "Dropout"
  bottom: "reshape4_L"
  top: "reshape4_L"
  dropout_param {
    dropout_ratio: 0.3
  }
}
layer {
  name: "conv4_L"
  type: "Convolution"
  bottom: "reshape4_L"
  top: "conv4_L"
  param {
    name: "conv4_w"
    lr_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_L"
  type: "ReLU"
  bottom: "conv4_L"
  top: "conv4_L"
}
layer {
  name: "norm4_L"
  type: "LRN"
  bottom: "conv4_L"
  top: "conv4_L"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}

#### Right Leg #######################
layer {
  name: "fc4_R"
  type: "InnerProduct"
  bottom: "pool3_R"
  top: "fc4_R"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "make2d4_R"
  type: "Reshape"
  bottom: "fc4_R"
  top: "reshape4_R"
  reshape_param {
    shape {
      dim: 0
      dim: 8
      dim: 16
      dim: 32
    }
  }
}
layer {
  name: "drop4_R"
  type: "Dropout"
  bottom: "reshape4_R"
  top: "reshape4_R"
  dropout_param {
    dropout_ratio: 0.3
  }
}
layer {
  name: "conv4_R"
  type: "Convolution"
  bottom: "reshape4_R"
  top: "conv4_R"
  param {
    name: "conv4_w"
    lr_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_R"
  type: "ReLU"
  bottom: "conv4_R"
  top: "conv4_R"
}
layer {
  name: "norm4_R"
  type: "LRN"
  bottom: "conv4_R"
  top: "conv4_R"
  lrn_param {
    local_size: 5
    alpha: 0.25
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}


######################################
#### STEP 5: fully-connecteds     ####
####    out: 16 x 32 x 32         ####
######################################

#### Left Leg  #######################
layer {
  name: "fc5_L"
  type: "InnerProduct"
  bottom: "conv4_L"
  top: "fc5_L"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "make2d5_L"
  type: "Reshape"
  bottom: "fc5_L"
  top: "reshape5_L"
  reshape_param {
    shape {
      dim: 0
      dim: 8
      dim: 16
      dim: 32
    }
  }
}
layer {
  name: "drop5_L"
  type: "Dropout"
  bottom: "reshape5_L"
  top: "reshape5_L"
  dropout_param {
    dropout_ratio: 0.3
  }
}

#### Right Leg #######################
layer {
  name: "fc5_R"
  type: "InnerProduct"
  bottom: "conv4_R"
  top: "fc5_R"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "make2d5_R"
  type: "Reshape"
  bottom: "fc5_R"
  top: "reshape5_R"
  reshape_param {
    shape {
      dim: 0
      dim: 8
      dim: 16
      dim: 32
    }
  }
}
layer {
  name: "drop5_R"
  type: "Dropout"
  bottom: "reshape5_R"
  top: "reshape5_R"
  dropout_param {
    dropout_ratio: 0.3
  }
}


######################################
#### STEP 6: join R & L legs      ####
####    out: 32 x 64 x 1          ####
######################################
layer {
  name: "joint_concat"
  type: "Concat"
  bottom: "reshape5_L"
  bottom: "reshape5_R"
  top: "joint_concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "joint_fc"
  type: "InnerProduct"
  bottom: "joint_concat"
  top: "joint_fc"
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "joint_make2d"
  type: "Reshape"
  bottom: "joint_fc"
  top: "joint_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 1
      dim: 32
      dim: 64
    }
  }
}


######################################
#### STEP 7: join R & L legs      ####
####    out: 64 x 128 x 1         ####
######################################
layer {
  name: "joint_upsample"
  type: "Deconvolution"
  bottom: "joint_reshape"
  top: "joint_upsamp"
  convolution_param{
    kernel_size: 4
    stride: 2
    num_output: 1
    group: 1
    pad: 1
    weight_filler: {
      type: "bilinear"
    }
    bias_term: false
  }
  param {
     lr_mult: 0
    decay_mult: 0
  }
}